<?php
/*   _______________________________________
    |  Obfuscated by PMPR - Php Obfuscator  |
    |             673b8c4418964             |
    |_______________________________________|
*/
 namespace Pmpr\Custom\Filefox; use Pmpr\Common\Foundation\Container\ComponentInitiator; use Pmpr\Common\Foundation\Interfaces\Constants; use Pmpr\Custom\Filefox\CPT\CPT; use Pmpr\Custom\Filefox\CTX\CTX; use Pmpr\Custom\Filefox\Frontend\Frontend; use Pmpr\Custom\Filefox\Storage\Storage; use Pmpr\Custom\Filefox\Ticket\Ticket; use Pmpr\Custom\Filefox\Woocommerce\Single; use Pmpr\Custom\Filefox\Woocommerce\Woocommerce; class Filefox extends ComponentInitiator { public function register() { $this->gkieogwukagigisy(__DIR__, [Constants::qescuiwgsyuikume => static function () { return __("\106\x69\154\x65\x66\x6f\x78\40\103\165\x73\x74\157\x6d", PR__CST__FILEFOX); }, Constants::sguyaymiiiiewame => Setting::class]); } public function mameiwsayuyquoeq() { CPT::symcgieuakksimmu(); CTX::symcgieuakksimmu(); Storage::symcgieuakksimmu(); Frontend::symcgieuakksimmu(); if ($this->caokeucsksukesyo()->owicscwgeuqcqaig()->mcgoysmkqsqooceq()) { Ajax::symcgieuakksimmu(); } } public function wigskegsqequoeks() { $this->qcsmikeggeemccuu("\167\160", [$this, "\x67\x6f\163\x6d\x71\143\x6d\155\157\x6d\x6b\161\167\x6d\151\x73"], 20); $this->waqewsckuayqguos("\142\145\x66\x6f\x72\x65\137\x65\x6e\161\x75\x65\165\x65\137\142\x61\143\x6b\x65\156\144\x5f\141\x73\163\145\x74\163", [$this, "\x65\156\161\165\145\x75\145"]); } public function aqyikqugcomoqqqi() { if ($this->caokeucsksukesyo()->cqusmgskowmesgcg()->iqqgmieeqemiowuk("\x74\151\x63\153\145\x74")) { Ticket::symcgieuakksimmu(); } } public function enqueue() { $meakksicouekcgoe = $this->caokeucsksukesyo()->usugyumcgeaaowsi(); $meakksicouekcgoe->qeqgammgesiwiysc($meakksicouekcgoe->owygwqwawqoiusis($this, "\142\141\x63\x6b\145\x6e\144", "\x62\x61\x63\153\x65\156\x64\x2e\152\x73")->simswskycwagoeqy()); } public function gosmqcmmomkqwmis() { if ($this->caokeucsksukesyo()->wikusamwomuogoau()->ggocakcisguuokai()) { Single::symcgieuakksimmu(); } } }
