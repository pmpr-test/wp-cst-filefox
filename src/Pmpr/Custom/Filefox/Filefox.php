<?php
/*   _______________________________________
    |  Obfuscated by PMPR - Php Obfuscator  |
    |             672f20b688e00             |
    |_______________________________________|
*/
 namespace Pmpr\Custom\Filefox; use Pmpr\Common\Foundation\Container\ComponentInitiator; use Pmpr\Common\Foundation\Interfaces\Constants; use Pmpr\Custom\Filefox\CPT\CPT; use Pmpr\Custom\Filefox\CTX\CTX; use Pmpr\Custom\Filefox\Frontend\Frontend; use Pmpr\Custom\Filefox\Storage\Storage; use Pmpr\Custom\Filefox\Ticket\Ticket; use Pmpr\Custom\Filefox\Woocommerce\Single; use Pmpr\Custom\Filefox\Woocommerce\Woocommerce; class Filefox extends ComponentInitiator { public function register() { $this->gkieogwukagigisy(__DIR__, [Constants::qescuiwgsyuikume => static function () { return __("\x46\151\154\x65\x66\157\170\40\103\x75\163\164\x6f\155", PR__CST__FILEFOX); }, Constants::sguyaymiiiiewame => Setting::class]); } public function mameiwsayuyquoeq() { CPT::symcgieuakksimmu(); CTX::symcgieuakksimmu(); Storage::symcgieuakksimmu(); Frontend::symcgieuakksimmu(); if ($this->caokeucsksukesyo()->owicscwgeuqcqaig()->mcgoysmkqsqooceq()) { Ajax::symcgieuakksimmu(); } } public function wigskegsqequoeks() { $this->qcsmikeggeemccuu("\x77\160", [$this, "\x67\x6f\x73\155\161\143\155\x6d\x6f\x6d\x6b\x71\167\x6d\151\163"], 20); $this->waqewsckuayqguos("\x62\x65\146\x6f\162\145\137\145\x6e\161\165\145\165\x65\x5f\x62\141\143\x6b\x65\x6e\144\137\x61\x73\x73\x65\x74\163", [$this, "\145\156\161\165\145\x75\x65"]); } public function aqyikqugcomoqqqi() { if ($this->caokeucsksukesyo()->cqusmgskowmesgcg()->iqqgmieeqemiowuk("\164\x69\143\153\145\x74")) { Ticket::symcgieuakksimmu(); } } public function enqueue() { $meakksicouekcgoe = $this->caokeucsksukesyo()->usugyumcgeaaowsi(); $meakksicouekcgoe->qeqgammgesiwiysc($meakksicouekcgoe->owygwqwawqoiusis($this, "\142\141\143\x6b\x65\x6e\x64", "\142\x61\143\x6b\x65\x6e\x64\x2e\152\x73")->simswskycwagoeqy()); } public function gosmqcmmomkqwmis() { if ($this->caokeucsksukesyo()->wikusamwomuogoau()->ggocakcisguuokai()) { Single::symcgieuakksimmu(); } } }
