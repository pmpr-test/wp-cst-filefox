<?php
/*   _______________________________________
    |  Obfuscated by PMPR - Php Obfuscator  |
    |             673bbd834bea7             |
    |_______________________________________|
*/
 namespace Pmpr\Custom\Filefox; use Pmpr\Common\Foundation\Container\ComponentInitiator; use Pmpr\Common\Foundation\Interfaces\Constants; use Pmpr\Custom\Filefox\CPT\CPT; use Pmpr\Custom\Filefox\CTX\CTX; use Pmpr\Custom\Filefox\Frontend\Frontend; use Pmpr\Custom\Filefox\Storage\Storage; use Pmpr\Custom\Filefox\Ticket\Ticket; use Pmpr\Custom\Filefox\Woocommerce\Single; use Pmpr\Custom\Filefox\Woocommerce\Woocommerce; class Filefox extends ComponentInitiator { public function register() { $this->gkieogwukagigisy(__DIR__, [Constants::qescuiwgsyuikume => static function () { return __("\x46\151\x6c\145\146\157\170\x20\x43\165\x73\164\157\x6d", PR__CST__FILEFOX); }, Constants::sguyaymiiiiewame => Setting::class]); } public function mameiwsayuyquoeq() { CPT::symcgieuakksimmu(); CTX::symcgieuakksimmu(); Storage::symcgieuakksimmu(); Frontend::symcgieuakksimmu(); if ($this->caokeucsksukesyo()->owicscwgeuqcqaig()->mcgoysmkqsqooceq()) { Ajax::symcgieuakksimmu(); } } public function wigskegsqequoeks() { $this->qcsmikeggeemccuu("\167\x70", [$this, "\x67\x6f\x73\155\161\143\x6d\155\x6f\x6d\x6b\x71\167\x6d\151\163"], 20); $this->waqewsckuayqguos("\142\x65\146\157\x72\x65\137\x65\x6e\x71\165\145\x75\x65\x5f\142\x61\x63\x6b\x65\x6e\x64\137\141\163\x73\x65\164\163", [$this, "\145\156\x71\x75\x65\165\x65"]); } public function aqyikqugcomoqqqi() { if ($this->caokeucsksukesyo()->cqusmgskowmesgcg()->iqqgmieeqemiowuk("\x74\151\x63\153\x65\164")) { Ticket::symcgieuakksimmu(); } } public function enqueue() { $meakksicouekcgoe = $this->caokeucsksukesyo()->usugyumcgeaaowsi(); $meakksicouekcgoe->qeqgammgesiwiysc($meakksicouekcgoe->owygwqwawqoiusis($this, "\x62\141\x63\x6b\x65\156\x64", "\x62\141\x63\x6b\x65\156\144\56\x6a\163")->simswskycwagoeqy()); } public function gosmqcmmomkqwmis() { if ($this->caokeucsksukesyo()->wikusamwomuogoau()->ggocakcisguuokai()) { Single::symcgieuakksimmu(); } } }
